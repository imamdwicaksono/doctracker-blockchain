// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/p2p.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Checkpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Company       string                 `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	IsViewable    bool                   `protobuf:"varint,5,opt,name=is_viewable,json=isViewable,proto3" json:"is_viewable,omitempty"`
	Note          string                 `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
	EncryptedNote string                 `protobuf:"bytes,7,opt,name=encrypted_note,json=encryptedNote,proto3" json:"encrypted_note,omitempty"`
	Address       string                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	EvidenceHash  string                 `protobuf:"bytes,9,opt,name=evidence_hash,json=evidenceHash,proto3" json:"evidence_hash,omitempty"`
	EvidencePath  string                 `protobuf:"bytes,10,opt,name=evidence_path,json=evidencePath,proto3" json:"evidence_path,omitempty"`
	IsCompleted   bool                   `protobuf:"varint,11,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	CompletedAt   int64                  `protobuf:"varint,12,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	mi := &file_proto_p2p_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{0}
}

func (x *Checkpoint) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Checkpoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Checkpoint) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Checkpoint) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Checkpoint) GetIsViewable() bool {
	if x != nil {
		return x.IsViewable
	}
	return false
}

func (x *Checkpoint) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Checkpoint) GetEncryptedNote() string {
	if x != nil {
		return x.EncryptedNote
	}
	return ""
}

func (x *Checkpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Checkpoint) GetEvidenceHash() string {
	if x != nil {
		return x.EvidenceHash
	}
	return ""
}

func (x *Checkpoint) GetEvidencePath() string {
	if x != nil {
		return x.EvidencePath
	}
	return ""
}

func (x *Checkpoint) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *Checkpoint) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

type Tracker struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Privacy        string                 `protobuf:"bytes,3,opt,name=privacy,proto3" json:"privacy,omitempty"`
	Creator        string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatorAddr    string                 `protobuf:"bytes,5,opt,name=creator_addr,json=creatorAddr,proto3" json:"creator_addr,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Checkpoints    []*Checkpoint          `protobuf:"bytes,7,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	TargetEnd      string                 `protobuf:"bytes,8,opt,name=target_end,json=targetEnd,proto3" json:"target_end,omitempty"`
	Status         string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	EncryptedNotes map[string]string      `protobuf:"bytes,10,rep,name=encrypted_notes,json=encryptedNotes,proto3" json:"encrypted_notes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Tracker) Reset() {
	*x = Tracker{}
	mi := &file_proto_p2p_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tracker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracker) ProtoMessage() {}

func (x *Tracker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracker.ProtoReflect.Descriptor instead.
func (*Tracker) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{1}
}

func (x *Tracker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tracker) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Tracker) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

func (x *Tracker) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Tracker) GetCreatorAddr() string {
	if x != nil {
		return x.CreatorAddr
	}
	return ""
}

func (x *Tracker) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Tracker) GetCheckpoints() []*Checkpoint {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

func (x *Tracker) GetTargetEnd() string {
	if x != nil {
		return x.TargetEnd
	}
	return ""
}

func (x *Tracker) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Tracker) GetEncryptedNotes() map[string]string {
	if x != nil {
		return x.EncryptedNotes
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevHash      string                 `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Hash          string                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Nonce         int32                  `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Transactions  []*Tracker             `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Encrypted     bool                   `protobuf:"varint,7,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_proto_p2p_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{2}
}

func (x *Block) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Block) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Block) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Block) GetTransactions() []*Tracker {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

type BlockList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*Block               `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockList) Reset() {
	*x = BlockList{}
	mi := &file_proto_p2p_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockList) ProtoMessage() {}

func (x *BlockList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockList.ProtoReflect.Descriptor instead.
func (*BlockList) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{3}
}

func (x *BlockList) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_p2p_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{4}
}

var File_proto_p2p_proto protoreflect.FileDescriptor

const file_proto_p2p_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/p2p.proto\x12\x05proto\"\xea\x02\n" +
	"\n" +
	"Checkpoint\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\acompany\x18\x03 \x01(\tR\acompany\x12\x12\n" +
	"\x04role\x18\x04 \x01(\tR\x04role\x12\x1f\n" +
	"\vis_viewable\x18\x05 \x01(\bR\n" +
	"isViewable\x12\x12\n" +
	"\x04note\x18\x06 \x01(\tR\x04note\x12%\n" +
	"\x0eencrypted_note\x18\a \x01(\tR\rencryptedNote\x12\x18\n" +
	"\aaddress\x18\b \x01(\tR\aaddress\x12#\n" +
	"\revidence_hash\x18\t \x01(\tR\fevidenceHash\x12#\n" +
	"\revidence_path\x18\n" +
	" \x01(\tR\fevidencePath\x12!\n" +
	"\fis_completed\x18\v \x01(\bR\visCompleted\x12!\n" +
	"\fcompleted_at\x18\f \x01(\x03R\vcompletedAt\"\x9f\x03\n" +
	"\aTracker\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\aprivacy\x18\x03 \x01(\tR\aprivacy\x12\x18\n" +
	"\acreator\x18\x04 \x01(\tR\acreator\x12!\n" +
	"\fcreator_addr\x18\x05 \x01(\tR\vcreatorAddr\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x123\n" +
	"\vcheckpoints\x18\a \x03(\v2\x11.proto.CheckpointR\vcheckpoints\x12\x1d\n" +
	"\n" +
	"target_end\x18\b \x01(\tR\ttargetEnd\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12K\n" +
	"\x0fencrypted_notes\x18\n" +
	" \x03(\v2\".proto.Tracker.EncryptedNotesEntryR\x0eencryptedNotes\x1aA\n" +
	"\x13EncryptedNotesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x01\n" +
	"\x05Block\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tprev_hash\x18\x03 \x01(\tR\bprevHash\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\tR\x04hash\x12\x14\n" +
	"\x05nonce\x18\x05 \x01(\x05R\x05nonce\x122\n" +
	"\ftransactions\x18\x06 \x03(\v2\x0e.proto.TrackerR\ftransactions\x12\x1c\n" +
	"\tencrypted\x18\a \x01(\bR\tencrypted\"1\n" +
	"\tBlockList\x12$\n" +
	"\x06blocks\x18\x01 \x03(\v2\f.proto.BlockR\x06blocks\"\a\n" +
	"\x05Empty2k\n" +
	"\n" +
	"P2PService\x12/\n" +
	"\rGetBlockchain\x12\f.proto.Empty\x1a\x10.proto.BlockList\x12,\n" +
	"\x0eBroadcastBlock\x12\f.proto.Block\x1a\f.proto.EmptyB\x0eZ\f/proto;protob\x06proto3"

var (
	file_proto_p2p_proto_rawDescOnce sync.Once
	file_proto_p2p_proto_rawDescData []byte
)

func file_proto_p2p_proto_rawDescGZIP() []byte {
	file_proto_p2p_proto_rawDescOnce.Do(func() {
		file_proto_p2p_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_p2p_proto_rawDesc), len(file_proto_p2p_proto_rawDesc)))
	})
	return file_proto_p2p_proto_rawDescData
}

var file_proto_p2p_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_p2p_proto_goTypes = []any{
	(*Checkpoint)(nil), // 0: proto.Checkpoint
	(*Tracker)(nil),    // 1: proto.Tracker
	(*Block)(nil),      // 2: proto.Block
	(*BlockList)(nil),  // 3: proto.BlockList
	(*Empty)(nil),      // 4: proto.Empty
	nil,                // 5: proto.Tracker.EncryptedNotesEntry
}
var file_proto_p2p_proto_depIdxs = []int32{
	0, // 0: proto.Tracker.checkpoints:type_name -> proto.Checkpoint
	5, // 1: proto.Tracker.encrypted_notes:type_name -> proto.Tracker.EncryptedNotesEntry
	1, // 2: proto.Block.transactions:type_name -> proto.Tracker
	2, // 3: proto.BlockList.blocks:type_name -> proto.Block
	4, // 4: proto.P2PService.GetBlockchain:input_type -> proto.Empty
	2, // 5: proto.P2PService.BroadcastBlock:input_type -> proto.Block
	3, // 6: proto.P2PService.GetBlockchain:output_type -> proto.BlockList
	4, // 7: proto.P2PService.BroadcastBlock:output_type -> proto.Empty
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_p2p_proto_init() }
func file_proto_p2p_proto_init() {
	if File_proto_p2p_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_p2p_proto_rawDesc), len(file_proto_p2p_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_p2p_proto_goTypes,
		DependencyIndexes: file_proto_p2p_proto_depIdxs,
		MessageInfos:      file_proto_p2p_proto_msgTypes,
	}.Build()
	File_proto_p2p_proto = out.File
	file_proto_p2p_proto_goTypes = nil
	file_proto_p2p_proto_depIdxs = nil
}
